{"version":3,"sources":["views/AlertDialog/AlertDialog.tsx","views/Footer/Footer.tsx","contracts/deployedAddresses.ts","contracts/vaults.ts","views/utils.ts","views/Vault/Vault.tsx","views/Deposit/DepositPrompt.tsx","contracts/tokens.ts","views/Deposit/ListVaults.tsx","views/Widget/Widget.tsx","views/UserAddress/UserAddress.tsx","views/TLV/TLV.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["Transition","React","forwardRef","props","ref","Slide","direction","AlertDialog","Dialog","open","TransitionComponent","keepMounted","onClose","handleClose","aria-labelledby","aria-describedby","DialogTitle","id","title","DialogContent","DialogContentText","children","DialogActions","Button","onClick","color","autoFocus","Footer","useState","dialog","setDialog","href","type","className","tokens","vaults","reduce","acc","token","icon","icons","toUpperCase","substr","address","deployedAddresses","logo","displayTokenValue","amount","tokenDecimals","padded","padStart","decimals","replace","int","length","asset","web3","vaultAddress","a","vaultContract","eth","Contract","vaultABI","methods","call","userAddress","currentProvider","selectedAddress","balanceOf","balance","Number","Vault","setBalance","deposit","getBalance","then","Grid","container","spacing","item","xs","src","alt","IconButton","aria-label","currentAsset","tokenLogo","vaultContractAddress","tokenContract","contractAddresses","useStyles","makeStyles","theme","createStyles","root","margin","wideTextField","width","sharedInputProps","variant","InputLabelProps","shrink","getMaxAmount","parseNumber","split","padEnd","startLoading","finishLoading","approve","send","from","unlockAllowance","finish","withdraw","rawAmount","setError","BN","gt","sharedButtonProps","size","DepositButton","allowance","error","setDepositInProgress","goBack","parsedAmount","state","lt","getDepositState","maxAllowance","pow","subn","toString","ButtonGroup","GoBackButton","disabled","resetAllowance","depositToken","DepositPrompt","setAmount","setAllowance","depositInProgress","useEffect","underlyingToken","tokenAddresses","erc20ABI","initializeValues","classes","noValidate","autoComplete","TextField","label","helperText","onChange","event","target","value","checkAmount","InputProps","endAdornment","InputAdornment","position","height","elevation","severity","CircularProgress","withdrawToken","ListVaults","vaultToken","setVaultToken","map","key","connectWallet","Divider","TabPanel","index","other","role","hidden","Box","p","Typography","component","a11yProps","backgroundColor","palette","background","paper","Widget","useTheme","setValue","connectWalletButton","undefined","AppBar","Tabs","newValue","indicatorColor","textColor","Tab","axis","onChangeIndex","dir","UserAddress","TLVCounter","x","tlv","setTlv","WebSocket","onmessage","message","data","Math","floor","format","App","setWeb3","walletError","setWalletError","window","ethereum","request","method","accounts","Web3","Error","enable","Boolean","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","console"],"mappings":"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","file":"static/js/main.1bd8a0ab.chunk.js","sourcesContent":["import React from \"react\";\nimport Button from \"@material-ui/core/Button\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport DialogActions from \"@material-ui/core/DialogActions\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\nimport DialogContentText from \"@material-ui/core/DialogContentText\";\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\nimport Slide from \"@material-ui/core/Slide\";\nimport { TransitionProps } from \"@material-ui/core/transitions\";\n\nconst Transition = React.forwardRef(function Transition(\n  props: TransitionProps & { children?: React.ReactElement<any, any> },\n  ref: React.Ref<unknown>\n) {\n  return <Slide direction=\"up\" ref={ref} {...props} />;\n});\n\nexport default function AlertDialog(props: {\n  title: string;\n  children: React.ReactElement<any, any>;\n  open: boolean;\n  handleClose: () => void;\n}) {\n  return (\n    <Dialog\n      open={props.open}\n      TransitionComponent={Transition}\n      keepMounted\n      onClose={props.handleClose}\n      aria-labelledby=\"alert-dialog-title\"\n      aria-describedby=\"alert-dialog-description\"\n    >\n      <DialogTitle id=\"alert-dialog-title\">{props.title}</DialogTitle>\n      <DialogContent>\n        <DialogContentText id=\"alert-dialog-description\">\n          {props.children}\n        </DialogContentText>\n      </DialogContent>\n      <DialogActions>\n        <Button onClick={props.handleClose} color=\"primary\" autoFocus>\n          Close\n        </Button>\n      </DialogActions>\n    </Dialog>\n  );\n}\n","import React from \"react\";\nimport AlertDialog from \"../AlertDialog/AlertDialog\";\nimport \"./Footer.css\";\n\nexport default function Footer() {\n  const [dialog, setDialog] = React.useState<\"about\" | \"contact\" | null>(null);\n\n  const handleClose = () => {\n    setDialog(null);\n  };\n  const a = <>a</>;\n  return (\n    <footer>\n      <a href=\"https://github.com/flamincome\">Code</a>&nbsp;·&nbsp;\n      <a href=\"https://docs.flamincome.finance\">\n        Docs\n      </a>\n      &nbsp;·&nbsp;\n      <button\n        type=\"button\"\n        className=\"link-button\"\n        onClick={() => setDialog(\"about\")}\n      >\n        About\n      </button>\n      &nbsp;·&nbsp;\n      <button\n        type=\"button\"\n        className=\"link-button\"\n        onClick={() => setDialog(\"contact\")}\n      >\n        Contact us\n      </button>\n      <AlertDialog\n        title={dialog === \"about\" ? \"About\" : \"Contact us\"}\n        open={dialog !== null}\n        handleClose={handleClose}\n      >\n        {dialog === \"about\" ? (\n          <>\n            FlamIncome is a yielf farming aggregator.\n            <br />\n            <br />\n            If you'd like to learn more about how everything works check out our{\" \"}\n            <a href=\"https://docs.flamincome.finance\">\n              our docs\n            </a>\n            .\n          </>\n        ) : (\n          <>\n            Just open an issue on one of the github repos\n          </>\n        )}\n      </AlertDialog>\n    </footer>\n  );\n}\n","export default {\n    \"StrategyBaselineAmmoniaUSDT\": \"0xc08E8046EB3170D03D9BE252240Db5D7c824720b\",\n    \"StrategyBaselineCarbonGaugeBTCInstance\": \"0x15C7C218c8010b4793F37798EC76f8671e24d885\",\n    \"Strategy_YFI_DForceUSDTInstance\": \"0x58D4Ae01E66612F85E5FcdD540D95e8CEA523A12\",\n    \"VaultBaselineUSDT\": \"0x54bE9254ADf8D5c8867a91E44f44c27f0c88e88A\",\n    \"StrategyBaselineCarbonGaugeInstance\": \"0x3125809AD69279cC0ed74fa3E972Ee84bee993AA\",\n    \"NormalizerMethanesBTC\": \"0x2Dd56dC238D1Fc2F9aAC3793A287F4E0aF1B08b4\",\n    \"VaultBaselinewBTC\": \"0x1a389c381a8242B7acFf0eB989173Cd5d0EFc3e3\",\n    \"ControllerBaselineSingleton\": \"0xDc03b4900Eff97d997f4B828ae0a45cd48C3b22d\",\n    \"VaultBaselinerenBTC\": \"0xB0B3442b632175B0b7d9521291c51060722C4e8C\",\n    \"NormalizerMethaneTUSD\": \"0x886f6F287Bb2eA7DE03830a5FD339EDc107c559f\",\n    \"VaultBaselinewETH\": \"0x1E9DC5d843731D333544e63B2B2082D21EF78ed3\",\n    \"VaultBaselineTUSD\": \"0xa322AEa77769666453377CC697fbE4C6390b9942\",\n    \"VaultBaselineyCRV\": \"0x5e7B4de4aC8e319fB2ec4bF9Fa98192346f8C99B\",\n    \"StrategyBaselineAmmoniaDAI\": \"0x88802d906C28B18eDDe15568c623965b81D594e2\",\n    \"StrategyBaselineAmmoniarenBTC\": \"0x19dc0A94b461d081A800660b2B121485d62feaC3\",\n    \"StrategyBaselineAmmoniacrvBTC\": \"0xDbc806Cb39A51DB346A9951Ec93263c0E03A7390\",\n    \"StrategyBaselineAmmoniawBTC\": \"0x2b68E5cC1D62e7682c0aE13a7ffcE2450B7846F5\",\n    \"StrategyBaselineAmmoniaUSDC\": \"0xD7A28808D3Af84255cAa914F5736563151A7E2D3\",\n    \"StrategyBaselineAmmoniayCRV\": \"0x44a06e775a80769DA1C2980Fa48328e4924C543C\",\n    \"StrategyBaselineAmmoniawETH\": \"0x73433c585c1dcc3d0c866cCF880F70E7B9735C4f\",\n    \"VaultBaselinesBTC\": \"0x681D3261CC6d2A18b59f8B53219b96F06BcEeB69\",\n    \"VaultBaselineUSDC\": \"0x3f7E3d82bdDc28d3Eb04F0d0A51e9Fc82db581f0\",\n    \"Strategy_YFI_wETHInstrance\": \"0x978B3aEc60fba0387299710Aa33F222E2033a09e\",\n    \"StrategyBaselineBenzeneCurveUSDDAI\": \"0xE776472517E32CC1846D4489308927eE3a8bBb9b\",\n    \"StrategyBaselineBenzeneCurveBTCwBTC\": \"0xAC211c1f0Ed96aBA24B5585e9f9B65A823081A08\",\n    \"NormalizerMethanewETH\": \"0xE179198Fd42f5De1a04Ffd9a36D6DC428cEB13f7\",\n    \"VaultBaselineyDAI\": \"0x79A2e8C1120d6B5fBfaBD3f7a39CF8473A635742\",\n    \"StrategyBaselineAmmoniayDAI\": \"0x6E3Cb53dd2335B358a6682411f878F2109Fc3c4F\",\n    \"StrategyBaselineBenzeneYearnDAI\": \"0x1d3C58047826cD63AA70595090c7050664c232B5\",\n    \"NormalizerMethaneUSDC\": \"0x7F0AD0525cb8C17D3F5c06cEb0AEA20Fa0d2cA0A\",\n    \"StrategyBaselineAmmoniaTUSD\": \"0x4E3013C0371C7fD9009faAef6dfcf848B6189148\",\n    \"VaultBaselinecrvBTC\": \"0x483A47247d5cBd420A9c5d2838Ec89776ba8B56B\",\n    \"StrategyBaselineAmmoniasBTC\": \"0xF7870e91c12931A45F033802e3F7a4E386B6AF36\",\n    \"NormalizerMethaneUSDT\": \"0x2205d2F559ef91580090011Aa4E0eF68Ec33da44\",\n    \"NormalizerMethaneDAI\": \"0x7245deD8459f59b0a680640535476c11b3cd0Ef6\",\n    \"NormalizerMethanerenBTC\": \"0x7757Ffe3aC09bC6430f6896F720E77CF80ec1F74\",\n    \"VaultBaselineDAI\": \"0x163D457fA8247f1A9279B9fa8eF513de116e4327\",\n    \"NormalizerMethanewBTC\": \"0xbB44B36e588445D7DA61A1e2e426664d03D40888\"\n} as {[contract:string]:string}\n","import deployedAddresses from './deployedAddresses';\nimport icons from 'base64-cryptocurrency-icons';\n\nexport const tokens = [\n    \"USDT\",\n    \"wBTC\",\n    \"renBTC\",\n    \"wETH\",\n    \"TUSD\",\n    \"yCRV\",\n    \"sBTC\",\n    \"USDC\",\n    \"yDAI\",\n    \"crvBTC\",\n    \"DAI\",\n]\n\nconst vaults = tokens.reduce((acc, token)=>{\n    let icon = icons[token.toUpperCase()]?.icon;\n    if(token === \"wETH\"){\n        icon =  icons['ETH']!.icon;\n    } else if(token === \"yCRV\" || token === \"yDAI\" || token === \"crvBTC\"){\n        icon = icons[token.substr(-3)]!.icon\n    }\n    acc[token]={\n        address: deployedAddresses[`VaultBaseline${token}`],\n        logo: icon!,\n    };\n    return acc;\n}, {} as {\n    [token:string]:{\n        address: string,\n        logo: string,\n    }\n});\n\nexport default vaults;","export default function displayTokenValue(amount: string, tokenDecimals:number): string {\n    const padded = amount.padStart(tokenDecimals + 1, '0');\n    const decimals = padded.substr(-tokenDecimals).replace(/0+$/, '')\n    const int = padded.substr(0, padded.length - tokenDecimals);\n    if(decimals===''){\n        return int\n    } else {\n        return `${int}.${decimals}`\n    }  \n}","import React from \"react\";\nimport Grid from \"@material-ui/core/Grid\";\nimport AccountBalanceWalletIcon from '@material-ui/icons/AccountBalanceWallet';\nimport IconButton from \"@material-ui/core/IconButton\";\nimport vaultABI from '../../contracts/ABIs/vault.json'\nimport { ERC20Contract, Web3Provider } from \"../../ethereum\";\nimport vaults from '../../contracts/vaults'\nimport type { AbiItem } from 'web3-utils'\nimport Web3 from \"web3\";\nimport displayTokenValue from '../utils'\nimport \"./Vault.css\";\n\nasync function getBalance(asset:string, web3: Web3, vaultAddress:string){\n    const vaultContract = new web3.eth.Contract(vaultABI as AbiItem[], vaultAddress) as ERC20Contract;\n    const tokenDecimals = vaultContract.methods.decimals().call() \n    const userAddress = (web3.currentProvider as any).selectedAddress;\n    const balance = await vaultContract.methods.balanceOf(userAddress).call()\n    return displayTokenValue(balance, Number(await tokenDecimals));\n}\n\nexport default function Vault(props: { asset: string, web3:Web3Provider, deposit:boolean, onClick: ()=>void }) {\n    const { logo, address } = vaults[props.asset];\n    const [balance, setBalance] = React.useState('0');\n    if(props.web3!==null && props.deposit === false){\n        getBalance(props.asset, props.web3, address).then(setBalance);\n    }\n    return <Grid container spacing={3} className=\"vault\">\n        <Grid item xs={2}>\n            <img src={logo} alt=\"coin logo\"/>\n        </Grid>\n        <Grid item xs={4}>\n            {props.asset}\n        </Grid>\n        <Grid item xs={3}>\n            {props.deposit?\"\":`Balance: ${balance}`}\n        </Grid> \n        <Grid item xs={3}>\n        <IconButton\n              aria-label=\"deposit\"\n              onClick={props.onClick}\n              className=\"iconButton\"\n            >\n              <AccountBalanceWalletIcon/>\n            </IconButton>\n        </Grid>\n    </Grid>;\n}\n","import React from \"react\";\nimport { createStyles, makeStyles, Theme } from \"@material-ui/core/styles\";\nimport TextField from \"@material-ui/core/TextField\";\nimport InputAdornment from \"@material-ui/core/InputAdornment\";\nimport Button from \"@material-ui/core/Button\";\nimport Grid from \"@material-ui/core/Grid\";\nimport ButtonGroup from '@material-ui/core/ButtonGroup';\nimport MuiAlert from '@material-ui/lab/Alert';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport { VaultContract, ERC20Contract } from \"../../ethereum\";\nimport vaultABI from '../../contracts/ABIs/vault.json'\nimport erc20ABI from '../../contracts/ABIs/IERC20.json'\nimport vaults from '../../contracts/vaults'\nimport tokenAddresses from '../../contracts/tokens'\nimport Web3 from \"web3\";\nimport type { AbiItem } from 'web3-utils'\nimport displayTokenValue from '../utils'\nimport BN from 'bn.js'\nimport \"./DepositPrompt.css\"\n\nconst useStyles = makeStyles((theme: Theme) =>\n    createStyles({\n        root: {\n            \"& > *\": {\n                margin: theme.spacing(1),\n                //width: '25ch',\n            },\n        },\n        wideTextField: {\n            width: \"100%\",\n        },\n    })\n);\n\nconst sharedInputProps = {\n    variant: \"outlined\" as const,\n    InputLabelProps: {\n        shrink: true,\n    },\n};\n\nfunction getMaxAmount(tokenContract: ERC20Contract, web3: Web3, deposit: boolean): Promise<string> {\n    if (deposit) {\n        return tokenContract.methods.balanceOf(userAddress).call();\n    } else {\n        return vaultContract.methods.balanceOf(userAddress).call();\n    }\n}\n\nfunction parseNumber(amount: string) {\n    let [int, decimals] = amount.split('.');\n    decimals = decimals ?? '';\n    int = int.replace(/^0+/, '');\n    decimals = decimals.padEnd(tokenDecimals, '0')\n    return int + decimals;\n}\n\n\ntype LoadingFunc = ()=>void\nasync function resetAllowance(startLoading: LoadingFunc, finishLoading: LoadingFunc) {\n    try {\n        startLoading();\n        await tokenContract.methods.approve(vaultContractAddress, '0').send({ from: userAddress });\n        finishLoading();\n    } catch (e) {\n        finishLoading();\n    }\n}\n\nasync function unlockAllowance(amount:string, startLoading: LoadingFunc, finishLoading: LoadingFunc) {\n    try {\n        startLoading()\n        await tokenContract.methods.approve(vaultContractAddress, amount).send({ from: userAddress });\n        finishLoading()\n    } catch (e) {\n        finishLoading()\n    }\n}\n\nasync function depositToken(amount:string, startLoading: LoadingFunc, finishLoading: LoadingFunc) {\n    try {\n        startLoading()\n        await vaultContract.methods.deposit(amount).send({ from: userAddress })\n        finishLoading()\n    } catch (e) {\n        finishLoading()\n    }\n}\n\nasync function withdrawToken(amount: string, finish: () => void) {\n    try {\n        await vaultContract.methods.withdraw(amount).send({ from: userAddress })\n        finish();\n    } catch (e) {\n        finish();\n    }\n}\n\nlet currentAsset: string;\nlet tokenLogo: string;\nlet vaultContractAddress: string;\nlet vaultContract: VaultContract;\nlet tokenContract: ERC20Contract;\nlet tokenDecimals: number;\nlet userAddress: string;\n\ninterface Props { web3: Web3, asset: string, goBack: () => void, deposit: boolean }\nfunction initializeValues(props: Props) {\n    if (currentAsset === props.asset) {\n        return; // Already initialized\n    }\n    currentAsset = props.asset;\n    const { logo, address } = vaults[props.asset];\n    vaultContractAddress = address;\n    vaultContract = new props.web3.eth.Contract(vaultABI as AbiItem[], address) as VaultContract;\n    const underlyingToken = tokenAddresses[props.asset];\n    tokenDecimals = underlyingToken.decimals;\n    tokenContract = new props.web3.eth.Contract(erc20ABI as AbiItem[], underlyingToken.address) as ERC20Contract;\n    tokenLogo = logo;\n    userAddress = (props.web3.currentProvider as any).selectedAddress;\n}\n\nasync function checkAmount(rawAmount: string, deposit: boolean, setError: (error: null | string) => void) {\n    const balance = new BN(await (deposit ? tokenContract : vaultContract).methods.balanceOf(userAddress).call());\n    const amount = new BN(parseNumber(rawAmount));\n    if (amount.gt(balance)) {\n        setError(\"Your balance is too low\")\n    } else {\n        setError(null)\n    }\n}\n\ntype DepositState = 'resetUnlock' | 'unlock' | 'deposit'\nfunction getDepositState(allowance: BN, amount: BN): DepositState {\n    if (allowance.lt(amount)) {\n        if (allowance.gt(new BN(0))) {\n            return 'resetUnlock'\n        } else {\n            return 'unlock'\n        }\n    } else {\n        return 'deposit'\n    }\n}\n\nconst sharedButtonProps = {\n    variant: \"contained\" as const,\n    color: \"primary\" as const,\n    size: \"large\" as const\n}\n\nfunction DepositButton(allowance: BN, error: null | string, web3: Web3, amount: string, setDepositInProgress: (newVal: boolean) => void, goBack: () => void) {\n    const parsedAmount = parseNumber(amount)\n    const state = getDepositState(allowance, new BN(parsedAmount))\n    const startLoading = () => setDepositInProgress(true)\n    const finishLoading = () => setDepositInProgress(false)\n    const maxAllowance = new BN(2).pow(new BN(256)).subn(1).toString()\n    if (state === 'unlock') {\n        return <>\n            <Grid item xs={8}><ButtonGroup\n                {...sharedButtonProps}\n            >\n                <Button\n                    onClick={()=>unlockAllowance(parsedAmount, startLoading, finishLoading)}\n                >Unlock</Button>\n                <Button\n                    onClick={()=>unlockAllowance(maxAllowance, startLoading, finishLoading)}\n                >Infinity Unlock</Button>\n            </ButtonGroup>\n            </Grid>\n            {GoBackButton(goBack)}\n        </>\n    } else {\n        return <>\n            <Grid item xs={2}></Grid>\n            <Grid item xs={4}>\n                <Button\n                    {...sharedButtonProps}\n                    disabled={error !== null || amount === '0'}\n                    onClick={\n                        () => {\n                            if(state === 'resetUnlock'){\n                                resetAllowance(startLoading, finishLoading)\n                            } else {\n                                depositToken(parsedAmount, startLoading, finishLoading)\n                            }\n                        }\n                    }>\n                    {state === 'resetUnlock' ? 'Reset Allowance' : 'Deposit'}\n                </Button>\n            </Grid>\n            {GoBackButton(goBack)}\n            <Grid item xs={2}></Grid>\n        </>\n    }\n}\n\nfunction GoBackButton(goBack: () => void) {\n    return <Grid item xs={4}>\n        <Button variant=\"contained\" color=\"default\" size=\"large\" onClick={goBack}>\n            Go back\n        </Button>\n    </Grid>\n}\n\nexport default function DepositPrompt(props: Props) {\n    const [amount, setAmount] = React.useState('0');\n    const [error, setError] = React.useState<null | string>(null);\n    const [allowance, setAllowance] = React.useState<BN>(new BN(0));\n    const [depositInProgress, setDepositInProgress] = React.useState(false);\n    React.useEffect(() => {\n        initializeValues(props);\n        tokenContract.methods.allowance(userAddress, vaultContractAddress).call()\n            .then(allowance => setAllowance(new BN(allowance)))\n    }, [props]);\n\n    const classes = useStyles();\n    return <>\n        <Grid container spacing={3} className=\"verticalCenter\">\n            <Grid item xs={9}>\n                <form className={classes.root} noValidate autoComplete=\"off\">\n                    <TextField\n                        label=\"Amount\"\n                        {...sharedInputProps}\n                        error={error !== null}\n                        helperText={error}\n                        className={classes.wideTextField}\n                        onChange={(event) => {\n                            setAmount(event.target.value)\n                            checkAmount(event.target.value, props.deposit, setError)\n                        }}\n                        value={amount}\n                        InputProps={{\n                            endAdornment: (\n                                <InputAdornment position=\"end\">\n                                    <img\n                                        src={tokenLogo}\n                                        height={20}\n                                        alt=\"coin logo\"\n                                    />\n                                </InputAdornment>\n                            ),\n                        }}\n                    />\n                </form>\n            </Grid>\n            <Grid item xs={3}>\n                <Button variant=\"contained\" color=\"default\" size=\"large\" onClick={async () => {\n                    setAmount(displayTokenValue(await getMaxAmount(tokenContract, props.web3, props.deposit), tokenDecimals));\n                }}>\n                    Max\n              </Button>\n            </Grid>\n            <Grid item xs={12}>\n                <MuiAlert elevation={3} variant=\"filled\" severity=\"warning\" >A 0.5% fee will be charged on withdraws</MuiAlert>\n            </Grid>\n            {\n                depositInProgress ?\n                    <Grid item xs={12}>\n                        <CircularProgress />\n                    </Grid> :\n                    props.deposit ?\n                        DepositButton(allowance, error, props.web3, amount, setDepositInProgress, props.goBack)\n                        :\n                        <><Grid item xs={2}></Grid><Grid item xs={4}>\n                            <Button\n                                {...sharedButtonProps}\n                                disabled={error !== null || amount === '0'}\n                                onClick={\n                                    () => {\n                                        setDepositInProgress(true);\n                                        withdrawToken(\n                                            parseNumber(amount),\n                                            () => {\n                                                setDepositInProgress(false)\n                                            }\n                                        )\n                                    }\n                                }>\n                                Withdraw\n                            </Button>\n                        </Grid>\n                            {GoBackButton(props.goBack)}\n                            <Grid item xs={2}></Grid>\n                        </>\n            }\n        </Grid>\n    </>\n}","// Addresses extracted from the `token` property of the deployed vaults\n\nconst contractAddresses = {\n    \"USDT\": {\n        address: \"0xdac17f958d2ee523a2206206994597c13d831ec7\",\n        decimals: 6\n    },\n    \"wBTC\": {\n        address: \"0x2260fac5e5542a773aa44fbcfedf7c193bc2c599\",\n        decimals: 8\n    },\n    \"renBTC\": {\n        address: \"0xeb4c2781e4eba804ce9a9803c67d0893436bb27d\",\n        decimals: 8\n    },\n    \"wETH\": {\n        address: \"0xc02aaa39b223fe8d0a0e5c4f27ead9083c756cc2\",\n        decimals: 18\n    },\n    \"TUSD\": {\n        address: \"0x0000000000085d4780b73119b644ae5ecd22b376\",\n        decimals: 18\n    },\n    \"yCRV\": {\n        address: \"0xdf5e0e81dff6faf3a7e52ba697820c5e32d806a8\",\n        decimals: 18\n    },\n    \"sBTC\": {\n        address: \"0xfe18be6b3bd88a2d2a7f928d00292e7a9963cfc6\",\n        decimals: 18\n    },\n    \"USDC\": {\n        address: \"0xa0b86991c6218b36c1d19d4a2e9eb0ce3606eb48\",\n        decimals: 6\n    },\n    \"yDAI\": {\n        address: \"0x16de59092dae5ccf4a1e6439d611fd0653f0bd01\",\n        decimals: 18\n    },\n    \"crvBTC\": {\n        address: \"0x075b1bb99792c9e1041ba13afef80c91a1e70fb3\",\n        decimals: 18\n    },\n    \"DAI\": {\n        address: \"0x6b175474e89094c44da98b954eedeac495271d0f\",\n        decimals: 18\n    },\n} as {\n    [token: string]: { address: string, decimals: number }\n}\n\n    export default contractAddresses;","import React from \"react\";\nimport { Web3Provider } from \"../../ethereum\";\nimport \"./Deposit.css\";\nimport Divider from '@material-ui/core/Divider';\nimport {tokens} from '../../contracts/vaults'\nimport Vault from '../Vault/Vault'\nimport DepositPrompt from './DepositPrompt'\n\nexport default function ListVaults(props: { web3: Web3Provider, connectWallet:()=>Promise<void>, deposit:boolean }) {\n  const [vaultToken, setVaultToken] = React.useState<string|null>(null);\n  if(props.web3 === null && props.deposit === false){\n    return <></>\n  }\n  if (vaultToken === null) {\n    return (\n      <>\n      {tokens.map(asset => <div key={asset}><Vault asset={asset} web3={props.web3} deposit={props.deposit} onClick={async ()=>{\n        if(props.web3===null){\n          await props.connectWallet();\n          setVaultToken(asset)\n        } else {\n          setVaultToken(asset)\n        }\n        }}/><Divider /></div>)\n      }\n      </>\n    );\n  } else if (vaultToken !== null) {\n    if(props.web3===null){\n      props.connectWallet();\n      return <></> // Should never happen\n    } else {\n      return <DepositPrompt asset={vaultToken} deposit={props.deposit} web3={props.web3} goBack={()=>{setVaultToken(null)}}/>\n    }\n  } else {\n    return <></>\n  }\n}\n","import React from \"react\";\nimport SwipeableViews from \"react-swipeable-views\";\nimport { makeStyles, Theme, useTheme } from \"@material-ui/core/styles\";\nimport AppBar from \"@material-ui/core/AppBar\";\nimport Tabs from \"@material-ui/core/Tabs\";\nimport Tab from \"@material-ui/core/Tab\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Box from \"@material-ui/core/Box\";\nimport ListVaults from \"../Deposit/ListVaults\";\nimport { Web3Provider } from \"../../ethereum\";\nimport Button from \"@material-ui/core/Button\";\n\ninterface TabPanelProps {\n  children?: React.ReactNode;\n  dir?: string;\n  index: any;\n  value: any;\n}\n\nfunction TabPanel(props: TabPanelProps) {\n  const { children, value, index, ...other } = props;\n\n  return (\n    <div\n      role=\"tabpanel\"\n      hidden={value !== index}\n      id={`full-width-tabpanel-${index}`}\n      aria-labelledby={`full-width-tab-${index}`}\n      {...other}\n    >\n      {value === index && (\n        <Box p={3}>\n          <Typography component={\"span\"}>{children}</Typography>\n        </Box>\n      )}\n    </div>\n  );\n}\n\nfunction a11yProps(index: any) {\n  return {\n    id: `full-width-tab-${index}`,\n    \"aria-controls\": `full-width-tabpanel-${index}`,\n  };\n}\n\nconst useStyles = makeStyles((theme: Theme) => ({\n  root: {\n    backgroundColor: theme.palette.background.paper,\n    width: '100%',\n    'max-width': 500,\n    \"box-shadow\": \"0px 0px 16px 6px rgba(0, 0, 139, .4)\",\n    \"margin-bottom\": \"5em\",\n    \"margin-top\": \"10vh\"\n  },\n}));\n\nexport default function Widget(props: {\n  web3: Web3Provider;\n  connectWallet: () => Promise<void>;\n}) {\n  const classes = useStyles();\n  const theme = useTheme();\n  const [value, setValue] = React.useState(0);\n\n  const handleChange = (event: React.ChangeEvent<{}>, newValue: number) => {\n    setValue(newValue);\n  };\n\n  const handleChangeIndex = (index: number) => {\n    setValue(index);\n  };\n\n  const connectWalletButton =\n    props.web3 !== null ? undefined : (\n      <Button\n        variant=\"contained\"\n        color=\"primary\"\n        size=\"large\"\n        onClick={props.connectWallet}\n      >\n        Connect Wallet\n      </Button>\n    );\n\n  return (\n    <div className={classes.root}>\n      <AppBar position=\"static\" color=\"default\">\n        <Tabs\n          value={value}\n          onChange={handleChange}\n          indicatorColor=\"primary\"\n          textColor=\"primary\"\n          variant=\"fullWidth\"\n        >\n          <Tab label=\"Deposit\" {...a11yProps(0)} />\n          <Tab label=\"Withdraw\" {...a11yProps(1)} />\n        </Tabs>\n      </AppBar>\n      <SwipeableViews\n        axis={theme.direction === \"rtl\" ? \"x-reverse\" : \"x\"}\n        index={value}\n        onChangeIndex={handleChangeIndex}\n      >\n        <TabPanel value={value} index={0} dir={theme.direction}>\n          <ListVaults web3={props.web3} deposit={true} connectWallet={props.connectWallet}/>\n          {connectWalletButton}\n        </TabPanel>\n        <TabPanel value={value} index={1} dir={theme.direction}>\n          <ListVaults web3={props.web3} deposit={false} connectWallet={props.connectWallet}/>\n          {connectWalletButton}\n        </TabPanel>\n      </SwipeableViews>\n    </div>\n  );\n}\n","import React from \"react\";\nimport { Web3Provider } from \"../../ethereum\";\nimport \"./UserAddress.css\";\n\nexport default function UserAddress(props: { web3: Web3Provider }) {\n  return (\n    <div className=\"top-right\">\n      {props.web3 === null\n        ? \"\"\n        : (props.web3.currentProvider as any).selectedAddress}\n    </div>\n  );\n}\n","import React from \"react\";\nimport Typography from '@material-ui/core/Typography';\nimport Odometer from 'react-odometerjs';\nimport './TLV.css';\nimport './odometer-theme-default.css'\n\nfunction formatNumber(x: number) {\n  return Math.floor(x) //.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\");\n}\n\nexport default function TLVCounter() {\n  const [tlv, setTlv] = React.useState<null | number>(null);\n  React.useEffect(() => {\n    const ws = new WebSocket(\"wss://flamincome-tlv-pubsub.herokuapp.com/\");\n    ws.onmessage=message=>{\n      setTlv(Number(message.data))\n    }\n  });\n  if (tlv === null) {\n    return <></>\n  } else {\n    return <Typography variant=\"h4\" className=\"tlv\">\n      TLV: <Odometer value={formatNumber(tlv)} format=\"(.ddd),dd\" /> USD\n  </Typography>\n  }\n}\n","import React, { useState } from \"react\";\nimport Footer from \"./views/Footer/Footer\";\nimport Widget from \"./views/Widget/Widget\";\nimport UserAddress from \"./views/UserAddress/UserAddress\";\nimport AlertDialog from \"./views/AlertDialog/AlertDialog\";\nimport TLV from './views/TLV/TLV'\nimport Web3 from \"web3\";\nimport { Web3Provider } from \"./ethereum\";\nimport \"./App.css\";\n\nfunction App() {\n  const [web3, setWeb3] = useState<Web3Provider>(null);\n  const [walletError, setWalletError] = useState<null | React.ReactElement<\n    any,\n    any\n  >>(null);\n  if (web3 === null) {\n    // Auto-login if the ethereum provider has already approved us before\n    window.ethereum?.request({ method: \"eth_accounts\" }).then((accounts) => {\n      if (accounts.length > 0) {\n        setWeb3(new Web3(window.ethereum as any));\n      }\n    });\n  }\n  const connectWallet = async () => {\n    if (web3 !== null) {\n      throw new Error(\"Wallet already connected\");\n    }\n    if (window.ethereum === undefined) {\n      setWalletError(\n        <>\n          You must have MetaMask installed to use this product, get it{\" \"}\n          <a href=\"https://metamask.io/\">here</a>\n        </>\n      );\n      return;\n    }\n    await window.ethereum\n      .enable()\n      .then(() => setWeb3(new Web3(window.ethereum as any)));\n  };\n  return (\n    <div className=\"App\">\n      <UserAddress web3={web3} />\n      <TLV />\n      <Widget {...{ web3, connectWallet }} />\n      <Footer />\n      <AlertDialog\n        title=\"Error\"\n        open={walletError !== null}\n        handleClose={() => setWalletError(null)}\n      >\n        {walletError ?? <>Good</>}\n      </AlertDialog>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === \"localhost\" ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === \"[::1]\" ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === \"production\" && \"serviceWorker\" in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener(\"load\", () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            \"This web app is being served cache-first by a service \" +\n              \"worker. To learn more, visit https://bit.ly/CRA-PWA\"\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === \"installed\") {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                \"New content is available and will be used when all \" +\n                  \"tabs for this page are closed. See https://bit.ly/CRA-PWA.\"\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log(\"Content is cached for offline use.\");\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error(\"Error during service worker registration:\", error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { \"Service-Worker\": \"script\" },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get(\"content-type\");\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf(\"javascript\") === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        \"No internet connection found. App is running in offline mode.\"\n      );\n    });\n}\n\nexport function unregister() {\n  if (\"serviceWorker\" in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister();\n      })\n      .catch((error) => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}